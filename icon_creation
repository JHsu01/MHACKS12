// Basically, a bunch of request pols that search for the
// specific search queries (ex: police, hospital, etc).
// After each request specification, we will be able to print
// out the unique symbol representing the landmark/hazard.
var requestPol = {
    location: cityLocation ,
    radius: '200',
    type: ['police']
};
service.nearbySearch(requestPol, callback1);

var requestHosp = {
    location: cityLocation ,
    radius: '200',
    type: ['hospital']
};
service.nearbySearch(requestHosp, callback2);

var requestConst = {
    location: cityLocation ,
    radius: '200',
    type: ['construction']
};
service.nearbySearch(requestConst, callback3);

var requestAlert = {
    location: cityLocation ,
    radius: '200',
    type: ['alert']
};
service.nearbySearch(requestAlert, callback4);

var requestTrainSubway= {
    location: cityLocation ,
    radius: '200',
    type: ['train_subway']
};
service.nearbySearch(requestTrainSubway, callback5);

var requestAir= {
    location: cityLocation ,
    radius: '200',
    type: ['airport']
};
service.nearbySearch(requestAir, callback6);

var requestSupp= {
    location: cityLocation ,
    radius: '200',
    type: ['supplies']
};
service.nearbySearch(requestSupp, callback7);



// Copy paste these functions outside of the other intoFunction
function callback1(results, status) {
  if (status == google.maps.places.PlacesServiceStatus.OK) {
    for (var i = 0; i < results.length; i++) {
      var place = results[i];
      createMarker1(results[i]);
    }
  }
}

function createMarker1(place) {
  var iconBase = 'https://static.thenounproject.com/png/';
  var marker = new google.maps.Marker({
    map: map,
    icon: {
      url: iconBase + '11027-200.png',
      scaledSize: new google.maps.Size(30, 30)
    },
    position: place.geometry.location
  });
}

function callback2(results, status) {
  if (status == google.maps.places.PlacesServiceStatus.OK) {
    for (var i = 0; i < results.length; i++) {
      var place = results[i];
      createMarker2(results[i]);
    }
  }
}

function createMarker2(place) {
  var iconBase = 'https://static.thenounproject.com/png/';
  var marker = new google.maps.Marker({
    map: map,
    icon: {
      url: iconBase + '231877-200.png',
      scaledSize: new google.maps.Size(30, 30)
    },
    position: place.geometry.location
  });
}

function callback3(results, status) {
  if (status == google.maps.places.PlacesServiceStatus.OK) {
    for (var i = 0; i < results.length; i++) {
      var place = results[i];
      createMarker3(results[i]);
    }
  }
}

function createMarker3(place) {
  var iconBase = 'https://static.thenounproject.com/png/';
  var marker = new google.maps.Marker({
    map: map,
    icon: {
      url: iconBase + '4275-200.png',
      scaledSize: new google.maps.Size(30, 30)
    },
    position: place.geometry.location
  });
}

function callback4(results, status) {
  if (status == google.maps.places.PlacesServiceStatus.OK) {
    for (var i = 0; i < results.length; i++) {
      var place = results[i];
      createMarker4(results[i]);
    }
  }
}

function createMarker4(place) {
  var iconBase = 'https://static.thenounproject.com/png/';
  var marker = new google.maps.Marker({
    map: map,
    icon: {
      url: iconBase + '10890-200.png',
      scaledSize: new google.maps.Size(30, 30)
    },
    position: place.geometry.location
  });
}

function callback5(results, status) {
  if (status == google.maps.places.PlacesServiceStatus.OK) {
    for (var i = 0; i < results.length; i++) {
      var place = results[i];
      createMarker5(results[i]);
    }
  }
}

function createMarker5(place) {
  var iconBase = 'https://static.thenounproject.com/png/';
  var marker = new google.maps.Marker({
    map: map,
    icon: {
      url: iconBase + '26862-200.png',
      scaledSize: new google.maps.Size(30, 30)
    },
    position: place.geometry.location
  });
}

function callback6(results, status) {
  if (status == google.maps.places.PlacesServiceStatus.OK) {
    for (var i = 0; i < results.length; i++) {
      var place = results[i];
      createMarker6(results[i]);
    }
  }
}

function createMarker6(place) {
  var iconBase = 'https://static.thenounproject.com/png/';
  var marker = new google.maps.Marker({
    map: map,
    icon: {
      url: iconBase + '1031715-200.png',
      scaledSize: new google.maps.Size(30, 30)
    },
    position: place.geometry.location
  });
}

function callback7(results, status) {
  if (status == google.maps.places.PlacesServiceStatus.OK) {
    for (var i = 0; i < results.length; i++) {
      var place = results[i];
      createMarker7(results[i]);
    }
  }
}

function createMarker7(place) {
  var iconBase = 'https://static.thenounproject.com/png/';
  var marker = new google.maps.Marker({
    map: map,
    icon: {
      url: iconBase + '2374718-200.png',
      scaledSize: new google.maps.Size(30, 30)
    },
    position: place.geometry.location
  });
}
